#include <Adafruit_NeoPixel.h>

#define PIN 2	 // input pin Neopixel is attached to

#define NUMPIXELS      12 // number of neopixels in Ring

Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);

int delayval = 50; // timing delay

int redColor = 0;
int greenColor = 0;
int blueColor = 0;

int sensorValue = 0;
int pixnumber = 12;


void setup() {
  pixels.begin(); // Initializes the NeoPixel library.
//  Serial.begin(9600);
  pinMode(A0, INPUT);
  Serial.begin(9600);
}

void loop() {
  setColor();
  
  // read the input on analog pin 0:
  sensorValue = analogRead(A0);
  // print out the value you read:
  Serial.println(sensorValue);
  delay(10); // Delay a little bit to improve simulation performance
	
  pixnumber = map(sensorValue, 0, 1023, 0, 12);

  for(int i=0;i<NUMPIXELS;i++){

    // pixels.Color takes RGB values, from 0,0,0 up to 255,255,255
    pixels.setPixelColor(i, pixels.Color(redColor, greenColor, blueColor)); // Moderately bright green color.
	
    if (i > pixnumber) {
    pixels.setPixelColor(i, pixels.Color(0, 0, 0));
    }
    
    pixels.show(); // This sends the updated pixel color to the hardware.

    delay(delayval); // Delay for a period of time (in milliseconds).
    
    // Serial.println(i);
    //pixels.setPixelColor(i, pixels.Color(0, 0, 0));
    
    if (i == NUMPIXELS){
    	i = 0; // start all over again!
        setColor();
	  }

  }
}

// setColor()
// picks random values to set for RGB

void setColor(){
  redColor = random(0, 255);
  greenColor = random(0,255);
  blueColor = random(0, 255);
  
}
